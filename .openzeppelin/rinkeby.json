{
  "contracts": {
    "Blacklistable": {
      "address": "0x3Be2274432f88f8DA82bD2D7C30610B52689414f",
      "constructorCode": "608060405234801561001057600080fd5b50610aeb806100206000396000f3fe",
      "bodyBytecodeHash": "4505278598e851cff58f1a85e91bfea0092cfeaee7bce3652ce98ecce496f844",
      "localBytecodeHash": "891210e1cd25dd35cb928ccb695f24db6691a1cb4c3c5ab78abaf4c7123648dd",
      "deployedBytecodeHash": "891210e1cd25dd35cb928ccb695f24db6691a1cb4c3c5ab78abaf4c7123648dd",
      "types": {
        "t_bool": {
          "id": "t_bool",
          "kind": "elementary",
          "label": "bool"
        },
        "t_uint256": {
          "id": "t_uint256",
          "kind": "elementary",
          "label": "uint256"
        },
        "t_array:50<t_uint256>": {
          "id": "t_array:50<t_uint256>",
          "valueType": "t_uint256",
          "length": "50",
          "kind": "array",
          "label": "uint256[50]"
        },
        "t_address": {
          "id": "t_address",
          "kind": "elementary",
          "label": "address"
        },
        "t_mapping<t_bool>": {
          "id": "t_mapping<t_bool>",
          "valueType": "t_bool",
          "label": "mapping(key => bool)",
          "kind": "mapping"
        }
      },
      "storage": [
        {
          "contract": "Initializable",
          "path": "@openzeppelin/upgrades/contracts/Initializable.sol",
          "label": "initialized",
          "astId": 1246,
          "type": "t_bool",
          "src": "757:24:10"
        },
        {
          "contract": "Initializable",
          "path": "@openzeppelin/upgrades/contracts/Initializable.sol",
          "label": "initializing",
          "astId": 1248,
          "type": "t_bool",
          "src": "876:25:10"
        },
        {
          "contract": "Initializable",
          "path": "@openzeppelin/upgrades/contracts/Initializable.sol",
          "label": "______gap",
          "astId": 1304,
          "type": "t_array:50<t_uint256>",
          "src": "1951:29:10"
        },
        {
          "contract": "Ownable",
          "path": "@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol",
          "label": "_owner",
          "astId": 566,
          "type": "t_address",
          "src": "317:22:5"
        },
        {
          "contract": "Ownable",
          "path": "@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol",
          "label": "______gap",
          "astId": 677,
          "type": "t_array:50<t_uint256>",
          "src": "2277:29:5"
        },
        {
          "contract": "Blacklistable",
          "path": "contracts/Blacklistable.sol",
          "label": "blacklister",
          "astId": 1312,
          "type": "t_address",
          "src": "252:26:11"
        },
        {
          "contract": "Blacklistable",
          "path": "contracts/Blacklistable.sol",
          "label": "blacklisted",
          "astId": 1316,
          "type": "t_mapping<t_bool>",
          "src": "284:45:11"
        }
      ],
      "warnings": {
        "hasConstructor": false,
        "hasSelfDestruct": false,
        "hasDelegateCall": false,
        "hasInitialValuesInDeclarations": false,
        "uninitializedBaseContracts": []
      }
    },
    "MasterMinter": {
      "address": "0x80775f5f86A23CcAdD6640c486e3f60BF70Ea437",
      "constructorCode": "608060405234801561001057600080fd5b50610de2806100206000396000f3fe",
      "bodyBytecodeHash": "5a56eb3842e00402678f59cbfd8b0261a9ae6dcb134e90bdf6fbc6147669759a",
      "localBytecodeHash": "81e0a6f77cf01bf16da12e3a28c7f43f9880cd2e7861a595e9720817f6bff28f",
      "deployedBytecodeHash": "81e0a6f77cf01bf16da12e3a28c7f43f9880cd2e7861a595e9720817f6bff28f",
      "types": {
        "t_bool": {
          "id": "t_bool",
          "kind": "elementary",
          "label": "bool"
        },
        "t_uint256": {
          "id": "t_uint256",
          "kind": "elementary",
          "label": "uint256"
        },
        "t_array:50<t_uint256>": {
          "id": "t_array:50<t_uint256>",
          "valueType": "t_uint256",
          "length": "50",
          "kind": "array",
          "label": "uint256[50]"
        },
        "t_address": {
          "id": "t_address",
          "kind": "elementary",
          "label": "address"
        },
        "t_struct<Roles.Role>": {
          "id": "t_struct<Roles.Role>",
          "kind": "struct",
          "label": "Roles.Role",
          "members": [
            {
              "label": "bearer",
              "astId": 5,
              "type": "t_mapping<t_bool>",
              "src": "150:32:0"
            }
          ]
        },
        "t_mapping<t_bool>": {
          "id": "t_mapping<t_bool>",
          "valueType": "t_bool",
          "label": "mapping(key => bool)",
          "kind": "mapping"
        }
      },
      "storage": [
        {
          "contract": "Initializable",
          "path": "@openzeppelin/upgrades/contracts/Initializable.sol",
          "label": "initialized",
          "astId": 989,
          "type": "t_bool",
          "src": "757:24:7"
        },
        {
          "contract": "Initializable",
          "path": "@openzeppelin/upgrades/contracts/Initializable.sol",
          "label": "initializing",
          "astId": 991,
          "type": "t_bool",
          "src": "876:25:7"
        },
        {
          "contract": "Initializable",
          "path": "@openzeppelin/upgrades/contracts/Initializable.sol",
          "label": "______gap",
          "astId": 1047,
          "type": "t_array:50<t_uint256>",
          "src": "1951:29:7"
        },
        {
          "contract": "Ownable",
          "path": "@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol",
          "label": "_owner",
          "astId": 347,
          "type": "t_address",
          "src": "317:22:3"
        },
        {
          "contract": "Ownable",
          "path": "@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol",
          "label": "______gap",
          "astId": 458,
          "type": "t_array:50<t_uint256>",
          "src": "2277:29:3"
        },
        {
          "contract": "MinterRole",
          "path": "@openzeppelin/contracts-ethereum-package/contracts/access/roles/MinterRole.sol",
          "label": "_minters",
          "astId": 112,
          "type": "t_struct<Roles.Role>",
          "src": "286:27:1"
        },
        {
          "contract": "MinterRole",
          "path": "@openzeppelin/contracts-ethereum-package/contracts/access/roles/MinterRole.sol",
          "label": "______gap",
          "astId": 211,
          "type": "t_array:50<t_uint256>",
          "src": "1096:29:1"
        },
        {
          "contract": "MasterMinter",
          "path": "contracts/MasterMinter.sol",
          "label": "masterMinter",
          "astId": 1715,
          "type": "t_address",
          "src": "528:27:10"
        }
      ],
      "warnings": {
        "hasConstructor": false,
        "hasSelfDestruct": false,
        "hasDelegateCall": false,
        "hasInitialValuesInDeclarations": false,
        "uninitializedBaseContracts": [],
        "storageUncheckedVars": [
          {
            "contract": "MinterRole",
            "path": "@openzeppelin/contracts-ethereum-package/contracts/access/roles/MinterRole.sol",
            "label": "_minters",
            "astId": 112,
            "type": "t_struct<Roles.Role>",
            "src": "286:27:1"
          }
        ],
        "storageDiff": []
      }
    },
    "FiatToken": {
      "address": "0xd62eDFCc52E70fF5C85B92cE6726957A53Ef0525",
      "constructorCode": "608060405234801561001057600080fd5b506132c1806100206000396000f3fe",
      "bodyBytecodeHash": "bddda61b87e0618ea11c390774303982253fe9359995e145c819f5030bbca5d3",
      "localBytecodeHash": "c4489213a26152d6b181a61e9b1850f38699c2551872f0859beaae8c73b9906a",
      "deployedBytecodeHash": "c4489213a26152d6b181a61e9b1850f38699c2551872f0859beaae8c73b9906a",
      "types": {
        "t_bool": {
          "id": "t_bool",
          "kind": "elementary",
          "label": "bool"
        },
        "t_uint256": {
          "id": "t_uint256",
          "kind": "elementary",
          "label": "uint256"
        },
        "t_array:50<t_uint256>": {
          "id": "t_array:50<t_uint256>",
          "valueType": "t_uint256",
          "length": "50",
          "kind": "array",
          "label": "uint256[50]"
        },
        "t_address": {
          "id": "t_address",
          "kind": "elementary",
          "label": "address"
        },
        "t_string": {
          "id": "t_string",
          "kind": "elementary",
          "label": "string"
        },
        "t_uint8": {
          "id": "t_uint8",
          "kind": "elementary",
          "label": "uint8"
        },
        "t_mapping<t_uint256>": {
          "id": "t_mapping<t_uint256>",
          "valueType": "t_uint256",
          "label": "mapping(key => uint256)",
          "kind": "mapping"
        },
        "t_struct<Types.Multihash>": {
          "id": "t_struct<Types.Multihash>",
          "kind": "struct",
          "label": "Types.Multihash",
          "members": [
            {
              "label": "digest",
              "astId": 2070,
              "type": "t_bytes32",
              "src": "230:14:13"
            },
            {
              "label": "hashFunction",
              "astId": 2072,
              "type": "t_uint8",
              "src": "255:18:13"
            },
            {
              "label": "size",
              "astId": 2074,
              "type": "t_uint8",
              "src": "283:10:13"
            }
          ]
        },
        "t_bytes32": {
          "id": "t_bytes32",
          "kind": "elementary",
          "label": "bytes32"
        }
      },
      "storage": [
        {
          "contract": "Initializable",
          "path": "@openzeppelin/upgrades/contracts/Initializable.sol",
          "label": "initialized",
          "astId": 989,
          "type": "t_bool",
          "src": "757:24:7"
        },
        {
          "contract": "Initializable",
          "path": "@openzeppelin/upgrades/contracts/Initializable.sol",
          "label": "initializing",
          "astId": 991,
          "type": "t_bool",
          "src": "876:25:7"
        },
        {
          "contract": "Initializable",
          "path": "@openzeppelin/upgrades/contracts/Initializable.sol",
          "label": "______gap",
          "astId": 1047,
          "type": "t_array:50<t_uint256>",
          "src": "1951:29:7"
        },
        {
          "contract": "Ownable",
          "path": "@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol",
          "label": "_owner",
          "astId": 347,
          "type": "t_address",
          "src": "317:22:3"
        },
        {
          "contract": "Ownable",
          "path": "@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol",
          "label": "______gap",
          "astId": 458,
          "type": "t_array:50<t_uint256>",
          "src": "2277:29:3"
        },
        {
          "contract": "ERC20Detailed",
          "path": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20Detailed.sol",
          "label": "_name",
          "astId": 859,
          "type": "t_string",
          "src": "397:20:5"
        },
        {
          "contract": "ERC20Detailed",
          "path": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20Detailed.sol",
          "label": "_symbol",
          "astId": 861,
          "type": "t_string",
          "src": "423:22:5"
        },
        {
          "contract": "ERC20Detailed",
          "path": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20Detailed.sol",
          "label": "_decimals",
          "astId": 863,
          "type": "t_uint8",
          "src": "451:23:5"
        },
        {
          "contract": "ERC20Detailed",
          "path": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20Detailed.sol",
          "label": "______gap",
          "astId": 915,
          "type": "t_array:50<t_uint256>",
          "src": "1112:29:5"
        },
        {
          "contract": "ERC20",
          "path": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol",
          "label": "_balances",
          "astId": 475,
          "type": "t_mapping<t_uint256>",
          "src": "767:46:4"
        },
        {
          "contract": "ERC20",
          "path": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol",
          "label": "_allowed",
          "astId": 481,
          "type": "t_mapping<t_uint256>",
          "src": "820:66:4"
        },
        {
          "contract": "ERC20",
          "path": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol",
          "label": "_totalSupply",
          "astId": 483,
          "type": "t_uint256",
          "src": "893:28:4"
        },
        {
          "contract": "ERC20",
          "path": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol",
          "label": "______gap",
          "astId": 848,
          "type": "t_array:50<t_uint256>",
          "src": "7729:29:4"
        },
        {
          "contract": "Pausable",
          "path": "contracts/Pausable.sol",
          "label": "pauserRole",
          "astId": 1947,
          "type": "t_address",
          "src": "259:18:12"
        },
        {
          "contract": "Pausable",
          "path": "contracts/Pausable.sol",
          "label": "_paused",
          "astId": 1949,
          "type": "t_bool",
          "src": "280:20:12"
        },
        {
          "contract": "FiatToken",
          "path": "contracts/FiatToken.sol",
          "label": "blacklister",
          "astId": 1220,
          "type": "t_address",
          "src": "746:32:9"
        },
        {
          "contract": "FiatToken",
          "path": "contracts/FiatToken.sol",
          "label": "masterMinter",
          "astId": 1222,
          "type": "t_address",
          "src": "781:32:9"
        },
        {
          "contract": "FiatToken",
          "path": "contracts/FiatToken.sol",
          "label": "toSDocument",
          "astId": 1478,
          "type": "t_struct<Types.Multihash>",
          "src": "3922:34:9"
        },
        {
          "contract": "FiatToken",
          "path": "contracts/FiatToken.sol",
          "label": "_mintersReserve",
          "astId": 1545,
          "type": "t_mapping<t_uint256>",
          "src": "4586:52:9"
        }
      ],
      "warnings": {
        "hasConstructor": false,
        "hasSelfDestruct": false,
        "hasDelegateCall": false,
        "hasInitialValuesInDeclarations": false,
        "uninitializedBaseContracts": [],
        "storageUncheckedVars": [
          {
            "contract": "FiatToken",
            "path": "contracts/FiatToken.sol",
            "label": "toSDocument",
            "astId": 1478,
            "type": "t_struct<Types.Multihash>",
            "src": "3922:34:9"
          }
        ],
        "storageDiff": []
      }
    }
  },
  "solidityLibs": {},
  "proxies": {
    "cclp-contracts/Blacklistable": [
      {
        "address": "0x7802831b0D6415a466E17d680A7739b17BEE92eE",
        "version": "1.0.0",
        "implementation": "0x3Be2274432f88f8DA82bD2D7C30610B52689414f",
        "admin": "0x726A759E03DB18047615b7470E4102A987caD499",
        "kind": "Upgradeable"
      }
    ],
    "cclp-contracts/MasterMinter": [
      {
        "address": "0x456B85109e595726DBCa9C6ba17Ac0DEde978a8C",
        "version": "1.0.0",
        "implementation": "0x80775f5f86A23CcAdD6640c486e3f60BF70Ea437",
        "admin": "0x726A759E03DB18047615b7470E4102A987caD499",
        "kind": "Upgradeable"
      }
    ],
    "cclp-contracts/FiatToken": [
      {
        "address": "0x5682911Ee63e9f05895BA1f31578E5D00Ee3e8F2",
        "version": "1.0.0",
        "implementation": "0xd62eDFCc52E70fF5C85B92cE6726957A53Ef0525",
        "admin": "0x726A759E03DB18047615b7470E4102A987caD499",
        "kind": "Upgradeable"
      }
    ]
  },
  "manifestVersion": "2.2",
  "version": "1.0.0",
  "proxyAdmin": {
    "address": "0x726A759E03DB18047615b7470E4102A987caD499"
  }
}